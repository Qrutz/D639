# Copyright (C) 2023  Christian Berger
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Which Docker image shall be used on the GitLab runner?
image: docker:23.0.4

# Details about how to connect to the Docker service to run this build.
variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ''

services:
  - name: docker:23.0.4-dind
    alias: docker

stages:
  - build
  - test
  - deploy

# Display information before we start the build.
before_script:
  - docker info
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

# This section describes what shall be done to build and test the project.
build-and-test:
  tags:
    - docker-build
  stage: build
  script:
    - docker build -f Dockerfile .
  except:
    - tags

  # tests-and-coverage:
  #   stage: test
  #   image: ubuntu:22.04
  #   tags:
  #     - docker-build
  #   except:
  #     - tags
  #   before_script: # install gcovr lcov and build-essential cmake etc
  #     - export DEBIAN_FRONTEND=noninteractive
  #     - apt-get update -y
  #     - apt-get upgrade -y
  #     - apt-get dist-upgrade -y
  #     - apt-get install -y build-essential cmake lcov gcovr --no-install-recommends
  #   script:
  #     - mkdir build
  #     - cd build
  #     - cmake -DENABLE_COVERAGE=ON ..
  #     - make
  #     - make test
  #     - lcov --directory . --capture --output-file coverage.info
  #     - lcov --remove coverage.info '/usr/*' --output-file coverage.info # filtering system-files
  #     - lcov --list coverage.info >> coverage_summary.txt
  #     # - mkdir coverage_output
  #     # - genhtml coverage.info --output-directory coverage_output

  # artifacts:
  #   name: ${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}
  #   paths:
  #     - build/coverage_summary.txt

# This section describes what shall be done to deploy artefacts from the project.
deploy-job:
  stage: deploy
  tags:
    - docker-build
  script:
    - echo "Deploying project"
    - docker build -f Dockerfile -t "$CI_REGISTRY_IMAGE":"$CI_COMMIT_TAG" .
    - docker push "$CI_REGISTRY_IMAGE":"$CI_COMMIT_TAG"
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v?(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/'
